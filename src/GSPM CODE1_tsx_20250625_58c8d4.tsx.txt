1. Header.tsx (Navigation bar with mobile menu)

'use client'
import { useState } from 'react'
import { Menu, X, Phone, Mail, Calculator, Bug, Calendar } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet'
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
} from '@/components/ui/navigation-menu'
import QuoteRequestForm from './QuoteRequestForm'
import PestCalculator from './PestCalculator'
import PestIdentificationTool from './PestIdentificationTool'
import BookingSystem from './BookingSystem'

export default function Header() {
  const [isOpen, setIsOpen] = useState(false)
  const [showQuoteForm, setShowQuoteForm] = useState(false)
  const [showCalculator, setShowCalculator] = useState(false)
  const [showPestTool, setShowPestTool] = useState(false)
  const [showBooking, setShowBooking] = useState(false)

  const navItems = [
    {
      title: 'Pest Control',
      items: [
        { title: 'Insects', href: '#', items: ['Ants', 'Bed Bugs', 'Bees', 'Cockroaches', 'Fleas', 'Flies', 'Moths', 'Wasps'] },
        { title: 'Rodents', href: '#', items: ['Mice', 'Rats', 'Squirrels'] },
        { title: 'Birds', href: '#', items: ['Gulls', 'Pigeons'] },
        { title: 'Wildlife', href: '#', items: ['Deer', 'Foxes', 'Rabbits', 'Moles'] },
      ]
    },
    {
      title: 'Specialist Services',
      items: [
        { title: 'Pest Proofing & Prevention', href: '#' },
        { title: 'Pest Treatments', href: '#' },
        { title: 'Cleaning Services', href: '#' },
        { title: 'Innovation & Technology', href: '#' },
      ]
    },
    {
      title: 'Sectors',
      items: [
        { title: 'Commercial', href: '#' },
        { title: 'Residential', href: '#' },
        { title: 'Food & Healthcare', href: '#' },
      ]
    },
    { title: 'Pest Control Near Me', href: '#' },
    { title: 'Our Company', href: '#' },
    { title: 'Careers', href: '#' },
  ]

  return (
    <>
      {/* Top contact bar */}
      <div className="bg-emerald-900 text-white py-2 px-4">
        <div className="container mx-auto flex justify-between items-center text-sm">
          <div className="flex items-center space-x-6">
            <div className="flex items-center space-x-2">
              <Phone className="h-4 w-4" />
              <span>Have a pest problem? Call: 0344 335 0330</span>
            </div>
            <Button 
              variant="outline" 
              size="sm" 
              className="text-emerald-900 border-white bg-white hover:bg-gray-100"
              onClick={() => setShowQuoteForm(true)}
            >
              GET A QUOTE
            </Button>
          </div>
          <div className="flex items-center space-x-6">
            <div className="flex items-center space-x-2">
              <Phone className="h-4 w-4" />
              <span>General enquiry: 0344 335 0330</span>
            </div>
            <div className="flex items-center space-x-2">
              <Mail className="h-4 w-4" />
              <span>EMAIL US</span>
            </div>
          </div>
        </div>
      </div>

      {/* Main header */}
      <header className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            {/* Logo */}
            <div className="flex items-center">
              <div className="text-2xl font-bold text-emerald-900">
                <span className="bg-emerald-900 text-white px-2 py-1 rounded">G</span>
                <span className="ml-2">GREENSHIELD</span>
              </div>
            </div>

            {/* Desktop Navigation */}
            <NavigationMenu className="hidden lg:flex">
              <NavigationMenuList>
                {navItems.map((item) => (
                  <NavigationMenuItem key={item.title}>
                    {item.items ? (
                      <>
                        <NavigationMenuTrigger className="text-gray-700 hover:text-emerald-900">
                          {item.title}
                        </NavigationMenuTrigger>
                        <NavigationMenuContent>
                          <div className="grid gap-3 p-6 w-[400px] lg:w-[500px] lg:grid-cols-2">
                            {item.items.map((subItem) => (
                              <NavigationMenuLink
                                key={subItem.title}
                                href={subItem.href}
                                className="block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-emerald-50 hover:text-emerald-900 focus:bg-emerald-50 focus:text-emerald-900"
                              >
                                <div className="text-sm font-medium leading-none">{subItem.title}</div>
                                {subItem.items && (
                                  <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">
                                    {subItem.items.join(', ')}
                                  </p>
                                )}
                              </NavigationMenuLink>
                            ))}
                          </div>
                        </NavigationMenuContent>
                      </>
                    ) : (
                      <NavigationMenuLink href={item.href} className="text-gray-700 hover:text-emerald-900 px-3 py-2">
                        {item.title}
                      </NavigationMenuLink>
                    )}
                  </NavigationMenuItem>
                ))}
              </NavigationMenuList>
            </NavigationMenu>

            {/* Right side buttons */}
            <div className="hidden lg:flex items-center space-x-4">
              <Button variant="outline" className="text-emerald-900 border-emerald-900 hover:bg-emerald-50">
                GREENSHIELD HUB
              </Button>
              <Button 
                className="bg-emerald-900 hover:bg-emerald-800"
                onClick={() => setShowBooking(true)}
              >
                Book Appointment
              </Button>
              <div className="flex items-center space-x-2 text-emerald-900">
                <Phone className="h-5 w-5" />
                <span className="font-semibold">0344 335 0330</span>
              </div>
            </div>

            {/* Mobile menu button */}
            <Sheet open={isOpen} onOpenChange={setIsOpen}>
              <SheetTrigger asChild>
                <Button variant="ghost" size="icon" className="lg:hidden">
                  <Menu className="h-6 w-6" />
                </Button>
              </SheetTrigger>
              <SheetContent side="right" className="w-[300px] sm:w-[400px]">
                <div className="flex flex-col space-y-4 mt-6">
                  {navItems.map((item) => (
                    <div key={item.title}>
                      <h3 className="font-semibold text-emerald-900 mb-2">{item.title}</h3>
                      {item.items && (
                        <div className="ml-4 space-y-2">
                          {item.items.map((subItem) => (
                            <a
                              key={subItem.title}
                              href={subItem.href}
                              className="block text-gray-600 hover:text-emerald-900 py-1"
                            >
                              {subItem.title}
                            </a>
                          ))}
                        </div>
                      )}
                    </div>
                  ))}
                  <div className="pt-6 border-t">
                    <Button 
                      className="w-full bg-emerald-900 hover:bg-emerald-800 mb-3"
                      onClick={() => {
                        setIsOpen(false)
                        setShowBooking(true)
                      }}
                    >
                      Book Appointment
                    </Button>
                    <div className="flex items-center justify-center space-x-2 text-emerald-900">
                      <Phone className="h-5 w-5" />
                      <span className="font-semibold">0344 335 0330</span>
                    </div>
                  </div>
                </div>
              </SheetContent>
            </Sheet>
          </div>
        </div>
      </header>

      {/* Modals */}
      {showQuoteForm && (
        <QuoteRequestForm onClose={() => setShowQuoteForm(false)} />
      )}
      {showCalculator && (
        <PestCalculator onClose={() => setShowCalculator(false)} />
      )}
      {showPestTool && (
        <PestIdentificationTool onClose={() => setShowPestTool(false)} />
      )}
      {showBooking && (
        <BookingSystem onClose={() => setShowBooking(false)} />
      )}
    </>
  )
}


2. Hero.tsx (Main hero section)

'use client'
import { Button } from '@/components/ui/button'
import { Phone, ArrowRight } from 'lucide-react'

export default function Hero() {
  return (
    <section className="relative bg-gradient-to-br from-emerald-900 via-emerald-800 to-emerald-900 text-white overflow-hidden">
      {/* Background decorative shapes */}
      <div className="absolute inset-0">
        <div className="absolute top-0 right-0 w-1/2 h-full opacity-10">
          <svg viewBox="0 0 400 400" className="w-full h-full">
            <path d="M100,200 Q200,100 300,200 Q200,300 100,200" fill="currentColor" />
          </svg>
        </div>
        <div className="absolute bottom-0 left-0 w-1/3 h-1/2 opacity-5">
          <svg viewBox="0 0 200 200" className="w-full h-full">
            <circle cx="100" cy="100" r="80" fill="currentColor" />
          </svg>
        </div>
      </div>

      <div className="container mx-auto px-4 py-20 relative z-10">
        <div className="grid lg:grid-cols-2 gap-12 items-center">
          <div className="space-y-8">
            <h1 className="text-5xl lg:text-6xl font-bold leading-tight">
              The <span className="text-emerald-300">future</span> of
              <br />
              pest <span className="text-emerald-300">management</span>
            </h1>
            <p className="text-xl text-emerald-100 leading-relaxed">
              Technology driven pest control services that are kind to the environment and our future.
              Specialising in rodent control, bird control, insect control and wildlife management.
            </p>
            <div className="flex flex-col sm:flex-row gap-4">
              <Button size="lg" className="bg-white text-emerald-900 hover:bg-emerald-50 text-lg px-8 py-6">
                <Phone className="mr-2 h-5 w-5" />
                <span className="font-bold">0344 335 0330</span>
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="border-white text-white hover:bg-white hover:text-emerald-900 text-lg px-8 py-6"
              >
                CONTACT US
                <ArrowRight className="ml-2 h-5 w-5" />
              </Button>
            </div>
          </div>
          <div className="relative">
            {/* Professional certifications and badges */}
            <div className="grid grid-cols-2 gap-6">
              <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 text-center">
                <div className="w-16 h-16 bg-emerald-300 rounded-full mx-auto mb-4 flex items-center justify-center">
                  <span className="text-emerald-900 font-bold text-2xl">45+</span>
                </div>
                <p className="text-sm font-semibold">Years Experience</p>
              </div>
              <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 text-center">
                <div className="w-16 h-16 bg-emerald-300 rounded-full mx-auto mb-4 flex items-center justify-center">
                  <span className="text-emerald-900 font-bold text-xl">24/7</span>
                </div>
                <p className="text-sm font-semibold">Emergency Service</p>
              </div>
              <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 text-center">
                <div className="w-16 h-16 bg-emerald-300 rounded-full mx-auto mb-4 flex items-center justify-center">
                  <span className="text-emerald-900 font-bold text-xl">?</span>
                </div>
                <p className="text-sm font-semibold">BPCA Certified</p>
              </div>
              <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 text-center">
                <div className="w-16 h-16 bg-emerald-300 rounded-full mx-auto mb-4 flex items-center justify-center">
                  <span className="text-emerald-900 font-bold text-xl">UK</span>
                </div>
                <p className="text-sm font-semibold">Nationwide Coverage</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Bottom wave decoration */}
      <div className="absolute bottom-0 left-0 right-0">
        <svg viewBox="0 0 1200 120" className="w-full h-12 text-white">
          <path d="M0,120 L0,60 Q300,0 600,60 T1200,60 L1200,120 Z" fill="currentColor" />
        </svg>
      </div>
    </section>
  )
}



3. Services.tsx (Commercial/Residential services)


import { Button } from '@/components/ui/button'
import { ArrowRight, Clock, Shield, Users } from 'lucide-react'

export default function Services() {
  return (
    <section className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <p className="text-emerald-600 font-semibold mb-2">SOLVING YOUR PEST PROBLEMS</p>
        </div>
        <div className="grid lg:grid-cols-2 gap-12">
          {/* Commercial Pest Control */}
          <div className="space-y-6">
            <div>
              <h2 className="text-4xl font-bold text-emerald-900 mb-2">
                Commercial
                <br />
                <span className="text-emerald-600">Pest Control</span>
              </h2>
              <p className="text-gray-600 text-lg leading-relaxed">
                We understand the importance of pest control within your business and are well aware
                of the cost implications and inconvenience a pest infestation can cause.
              </p>
            </div>
            <div className="relative">
              <img
                src="https://images.unsplash.com/photo-1577962917302-cd874c4e31d2?w=600&h=400&fit=crop"
                alt="Commercial pest control"
                className="w-full h-64 object-cover rounded-lg"
              />
              <div className="absolute inset-0 bg-emerald-900/20 rounded-lg" />
            </div>
            <div className="space-y-4">
              <div className="flex items-center space-x-3">
                <Clock className="h-5 w-5 text-emerald-600" />
                <span className="text-gray-700">24/7 monitoring</span>
              </div>
              <div className="flex items-center space-x-3">
                <Shield className="h-5 w-5 text-emerald-600" />
                <span className="text-gray-700">Dynamic risk management</span>
              </div>
              <div className="flex items-center space-x-3">
                <Users className="h-5 w-5 text-emerald-600" />
                <span className="text-gray-700">Expert pest management solutions</span>
              </div>
            </div>
            <Button className="bg-emerald-900 hover:bg-emerald-800 text-white">
              FIND OUT MORE
              <ArrowRight className="ml-2 h-4 w-4" />
            </Button>
          </div>

          {/* Residential Pest Control */}
          <div className="space-y-6">
            <div>
              <h2 className="text-4xl font-bold text-emerald-900 mb-2">
                Residential
                <br />
                <span className="text-emerald-600">Pest Control</span>
              </h2>
              <p className="text-gray-600 text-lg leading-relaxed">
                Nobody wants to have to deal with pests such as rodents, insects, wasps and bee control
                within their home. Pest infestations should be dealt with as soon as possible.
              </p>
            </div>
            <div className="relative">
              <img
                src="https://images.unsplash.com/photo-1560518883-ce09059eeffa?w=600&h=400&fit=crop"
                alt="Residential pest control"
                className="w-full h-64 object-cover rounded-lg"
              />
              <div className="absolute inset-0 bg-emerald-900/20 rounded-lg" />
            </div>
            <div className="space-y-4">
              <div className="flex items-center space-x-3">
                <Shield className="h-5 w-5 text-emerald-600" />
                <span className="text-gray-700">Caring for the environment</span>
              </div>
              <div className="flex items-center space-x-3">
                <Clock className="h-5 w-5 text-emerald-600" />
                <span className="text-gray-700">24/7 call out response time</span>
              </div>
              <div className="flex items-center space-x-3">
                <Users className="h-5 w-5 text-emerald-600" />
                <span className="text-gray-700">Expert pest management advice</span>
              </div>
            </div>
            <Button className="bg-emerald-900 hover:bg-emerald-800 text-white">
              FIND OUT MORE
              <ArrowRight className="ml-2 h-4 w-4" />
            </Button>
          </div>
        </div>
      </div>
    </section>
  )
}


4. ServiceCategories.tsx (Pest type categories)

import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import { ArrowRight } from 'lucide-react'

export default function ServiceCategories() {
  const services = [
    {
      title: 'Rodent Control Services',
      description: 'Get rid of mice & rats today! We provide safe & effective rodent extermination & removal services for homes & businesses.',
      icon: '??',
      color: 'from-emerald-600 to-emerald-700'
    },
    {
      title: 'Bird Control Services',
      description: 'Greenshield have a national team of experts with a wide array of experience in bird management solutions',
      icon: '??',
      color: 'from-blue-600 to-blue-700'
    },
    {
      title: 'Insect Control & Extermination Services',
      description: 'Insect pests typically become more of a problem as the weather gets warmer. Insects tend to be less thought of as pests until...',
      icon: '??',
      color: 'from-amber-600 to-amber-700'
    },
    {
      title: 'Integrated Management Services',
      description: 'IPM is an ecosystem-based strategy that focuses on long-term prevention of pests or their damage through a combination of techniques.',
      icon: '??',
      color: 'from-purple-600 to-purple-700'
    }
  ]

  return (
    <section className="py-20 bg-gray-50">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-bold text-emerald-900 mb-6">
            Effective Pest Control Solutions to Safeguard Your Home or Business
          </h2>
          <p className="text-lg text-gray-600 max-w-4xl mx-auto">
            Our technology-driven pest control solutions, supported by UK-wide regional teams, are ready to assist you.
            Discover what regions we cover and find a <strong>pest controller near you</strong>.
          </p>
          <p className="text-lg text-gray-600 max-w-4xl mx-auto mt-4">
            We provide comprehensive <strong>pest control services</strong>, including <strong>rodent control</strong>,
            <strong> bird control</strong>, <strong>insect control</strong>, and <strong>wildlife management</strong> solutions.
          </p>
        </div>

        <div className="mb-12">
          <h3 className="text-2xl font-bold text-emerald-900 text-center mb-8">
            Take a look at some of the common pests we can treat, prevent and remove from your premises:
          </h3>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {services.map((service) => (
            <Card key={service.title} className="group hover:shadow-xl transition-all duration-300 overflow-hidden">
              <div className={`h-32 bg-gradient-to-br ${service.color} flex items-center justify-center`}>
                <span className="text-5xl">{service.icon}</span>
              </div>
              <CardContent className="p-6">
                <h3 className="font-bold text-emerald-900 mb-3 text-lg leading-tight">
                  {service.title}
                </h3>
                <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                  {service.description}
                </p>
                <Button
                  variant="ghost"
                  className="w-full justify-between p-0 h-auto text-emerald-700 hover:text-emerald-900 font-semibold"
                >
                  Find out more
                  <ArrowRight className="h-4 w-4 group-hover:translate-x-1 transition-transform" />
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="text-center mt-16">
          <div className="bg-emerald-900 text-white p-8 rounded-lg inline-block">
            <h3 className="text-2xl font-bold mb-2">PEST CONTROL EXPERTS</h3>
            <p className="text-emerald-100 mb-4">Call us today</p>
            <Button size="lg" className="bg-white text-emerald-900 hover:bg-emerald-50 font-bold text-xl">
              0344 335 0330
            </Button>
            <p className="text-emerald-100 mt-4">Meeting all of your pest control needs across the UK.</p>
            <div className="flex justify-center gap-4 mt-4">
              <Button variant="outline" className="border-white text-white hover:bg-white hover:text-emerald-900">
                GET A QUOTE
              </Button>
              <Button variant="outline" className="border-white text-white hover:bg-white hover:text-emerald-900">
                REVIEWS
              </Button>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}


5. WhyChooseUs.tsx (Features section)

import { Award, Globe, Heart, Shield } from 'lucide-react'

export default function WhyChooseUs() {
  const features = [
    {
      icon: Globe,
      title: 'National Coverage',
      description: 'Greenshield is a national based pest management company, delivering a local service.'
    },
    {
      icon: Heart,
      title: 'Trusted & Reliable',
      description: 'We deliver on our commitments and promises, and care for your premises and environment.'
    },
    {
      icon: Shield,
      title: 'Innovation & Protection',
      description: 'Through innovation and our one team approach, we protect people, property and the planet'
    },
    {
      icon: Award,
      title: 'Positive Impact',
      description: 'We can be trusted to deliver and always make a positive impact.'
    }
  ]

  return (
    <section className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-bold text-emerald-900 mb-6">
            Why choose Greenshield?
          </h2>
          <p className="text-lg text-gray-600 max-w-3xl mx-auto">
            Greenshield has over 45 years of experience and is part of a national organisation which
            offers a complete Integrated Pest Management Service.
          </p>
        </div>

        {/* Certification badges */}
        <div className="flex justify-center items-center space-x-8 mb-16 flex-wrap gap-4">
          <div className="bg-emerald-100 p-4 rounded-lg">
            <span className="text-emerald-900 font-bold">BPCA</span>
          </div>
          <div className="bg-emerald-100 p-4 rounded-lg">
            <span className="text-emerald-900 font-bold">ISO 9001</span>
          </div>
          <div className="bg-emerald-100 p-4 rounded-lg">
            <span className="text-emerald-900 font-bold">45+ Years</span>
          </div>
          <div className="bg-emerald-100 p-4 rounded-lg">
            <span className="text-emerald-900 font-bold">24/7 Support</span>
          </div>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          {features.map((feature) => (
            <div key={feature.title} className="text-center group">
              <div className="w-20 h-20 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-6 group-hover:bg-emerald-200 transition-colors duration-300">
                <feature.icon className="h-10 w-10 text-emerald-700" />
              </div>
              <h3 className="text-xl font-bold text-emerald-900 mb-4">
                {feature.title}
              </h3>
              <p className="text-gray-600 leading-relaxed">
                {feature.description}
              </p>
            </div>
          ))}
        </div>

        {/* Awards section */}
        <div className="mt-16 text-center">
          <div className="bg-emerald-50 rounded-lg p-8 inline-block">
            <div className="flex items-center justify-center space-x-4 mb-4">
              <div className="w-16 h-16 bg-emerald-200 rounded-full flex items-center justify-center">
                <Award className="h-8 w-8 text-emerald-700" />
              </div>
              <div className="text-left">
                <p className="text-emerald-900 font-bold">Business Growth Award</p>
                <p className="text-emerald-700 font-semibold">WINNER!</p>
              </div>
            </div>
            <p className="text-gray-600">
              Recognized for excellence in pest management services
            </p>
          </div>
        </div>
      </div>
    </section>
  )
}


6. Testimonials.tsx (Customer reviews)


import { Card, CardContent } from '@/components/ui/card'
import { Quote, Star } from 'lucide-react'

export default function Testimonials() {
  const testimonials = [
    {
      type: 'Commercial Customer',
      text: 'As usual your performance is exemplary, the service you provide is excellent all the staff are very pleasant and accommodating. You played a pivotal role in our site achieving an AA grade in the recent BRC audit, with zero non-conformances against pest control.',
      author: 'Lee Scott',
      position: 'Facilities & Compliance Manager'
    },
    {
      type: 'Residential Customer',
      text: 'Used to get rid of wasp nests in our loft. Superb service thanks guys.',
      author: 'David Wythes',
      position: 'Homeowner'
    },
    {
      type: 'Commercial Customer',
      text: 'Quick service from central management and 1st class service from Craig who covers my area, thank you.',
      author: 'Polly Holt',
      position: 'Store Manager'
    }
  ]

  return (
    <section className="py-20 bg-emerald-50">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <p className="text-emerald-600 font-semibold mb-2">TESTIMONIALS</p>
          <h2 className="text-4xl font-bold text-emerald-900">
            What Our Customers Say
          </h2>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {testimonials.map((testimonial) => (
            <Card key={testimonial.author} className="bg-white shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardContent className="p-8">
                <div className="flex items-center justify-between mb-6">
                  <Quote className="h-8 w-8 text-emerald-600" />
                  <div className="flex space-x-1">
                    {Array.from({ length: 5 }, (_, i) => (
                      <Star key={`star-${i}`} className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                    ))}
                  </div>
                </div>
                <div className="mb-6">
                  <span className="bg-emerald-100 text-emerald-800 text-xs font-semibold px-3 py-1 rounded-full">
                    {testimonial.type}
                  </span>
                </div>
                <blockquote className="text-gray-700 leading-relaxed mb-6 italic">
                  "{testimonial.text}"
                </blockquote>
                <div className="border-t pt-4">
                  <p className="font-semibold text-emerald-900">{testimonial.author}</p>
                  <p className="text-sm text-gray-600">{testimonial.position}</p>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>
  )
}


7. LatestNews.tsx (Blog/news section)


import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import { Calendar, ArrowRight } from 'lucide-react'

export default function LatestNews() {
  const articles = [
    {
      title: 'Bee Removal: What to Do If You Find Bees in Your Home or Business',
      excerpt: 'Discover the best practices for safely handling bee infestations and when to call professional pest control services.',
      image: 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=400&h=250&fit=crop',
      date: '2024-01-15'
    },
    {
      title: 'Introducing Advanced Eco-Friendly Fly Control Solutions',
      excerpt: 'Learn about our latest environmentally conscious fly control technologies that protect your property while caring for nature.',
      image: 'https://images.unsplash.com/photo-1577962917302-cd874c4e31d2?w=400&h=250&fit=crop',
      date: '2024-01-10'
    },
    {
      title: 'The Vital Role of Bees: Protecting Pollinators & Responsible Removal',
      excerpt: 'Understanding the importance of bees in our ecosystem and how professional pest control ensures their protection.',
      image: 'https://images.unsplash.com/photo-1592074260647-2dc1b1c04e35?w=400&h=250&fit=crop',
      date: '2024-01-05'
    }
  ]

  return (
    <section className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <p className="text-emerald-600 font-semibold mb-2">THE LATEST</p>
          <h2 className="text-4xl font-bold text-emerald-900">
            News & Insights
          </h2>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {articles.map((article) => (
            <Card key={article.title} className="group hover:shadow-xl transition-all duration-300 overflow-hidden">
              <div className="relative overflow-hidden">
                <img
                  src={article.image}
                  alt={article.title}
                  className="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
                />
                <div className="absolute inset-0 bg-emerald-900/20 group-hover:bg-emerald-900/30 transition-colors duration-300" />
              </div>
              <CardContent className="p-6">
                <div className="flex items-center text-sm text-gray-500 mb-3">
                  <Calendar className="h-4 w-4 mr-2" />
                  {new Date(article.date).toLocaleDateString('en-GB', {
                    day: 'numeric',
                    month: 'long',
                    year: 'numeric'
                  })}
                </div>
                <h3 className="font-bold text-emerald-900 mb-3 text-lg leading-tight group-hover:text-emerald-700 transition-colors">
                  {article.title}
                </h3>
                <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                  {article.excerpt}
                </p>
                <Button
                  variant="ghost"
                  className="w-full justify-between p-0 h-auto text-emerald-700 hover:text-emerald-900 font-semibold"
                >
                  Find out more
                  <ArrowRight className="h-4 w-4 group-hover:translate-x-1 transition-transform" />
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="text-center mt-12">
          <Button
            variant="outline"
            className="border-emerald-900 text-emerald-900 hover:bg-emerald-900 hover:text-white"
          >
            View All Articles
          </Button>
        </div>
      </div>
    </section>
  )
}


8. Footer.tsx (Website footer)


import { Phone, Mail, Facebook, Linkedin } from 'lucide-react'
import { Button } from '@/components/ui/button'

export default function Footer() {
  const footerSections = [
    {
      title: 'Our Company',
      links: [
        'Environmental',
        'Values',
        'Careers',
        'About Us'
      ]
    },
    {
      title: 'Pest Control',
      links: [
        'Rodents',
        'Insects',
        'Birds',
        'Specialist Services',
        'All Pests'
      ]
    },
    {
      title: 'Policies',
      links: [
        'Standard Terms of Business',
        'Privacy Policy',
        'Cookie Policy


1. First, let's update the Header.tsx component to use the logo:

// src/components/Header.tsx
'use client'
import { useState } from 'react'
import { Menu, X, Phone, Mail, Calculator, Bug, Calendar } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet'
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
} from '@/components/ui/navigation-menu'
import QuoteRequestForm from './QuoteRequestForm'
import PestCalculator from './PestCalculator'
import PestIdentificationTool from './PestIdentificationTool'
import BookingSystem from './BookingSystem'
import Image from 'next/image'

export default function Header() {
  const [isOpen, setIsOpen] = useState(false)
  const [showQuoteForm, setShowQuoteForm] = useState(false)
  const [showCalculator, setShowCalculator] = useState(false)
  const [showPestTool, setShowPestTool] = useState(false)
  const [showBooking, setShowBooking] = useState(false)

  // ... (rest of your existing state and navItems)

  return (
    <>
      {/* Top contact bar */}
      <div className="bg-emerald-900 text-white py-2 px-4">
        <div className="container mx-auto flex justify-between items-center text-sm">
          <div className="flex items-center space-x-6">
            <div className="flex items-center space-x-2">
              <Phone className="h-4 w-4" />
              <span>Have a pest problem? Call: 0344 335 0330</span>
            </div>
            <Button 
              variant="outline" 
              size="sm" 
              className="text-emerald-900 border-white bg-white hover:bg-gray-100"
              onClick={() => setShowQuoteForm(true)}
            >
              GET A QUOTE
            </Button>
          </div>
          <div className="flex items-center space-x-6">
            <div className="flex items-center space-x-2">
              <Phone className="h-4 w-4" />
              <span>General enquiry: 0344 335 0330</span>
            </div>
            <div className="flex items-center space-x-2">
              <Mail className="h-4 w-4" />
              <span>EMAIL US</span>
            </div>
          </div>
        </div>
      </div>

      {/* Main header */}
      <header className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-20">
            {/* Logo - Updated with text version */}
            <div className="flex items-center">
              <div className="text-2xl font-bold text-emerald-900">
                <span className="bg-emerald-900 text-white px-2 py-1 rounded">G</span>
                <span className="ml-2">GREENSHIELD</span>
              </div>
              <div className="ml-2 text-sm text-gray-600 hidden sm:block">
                PEST MANAGEMENT
              </div>
            </div>

            {/* Desktop Navigation */}
            <NavigationMenu className="hidden lg:flex">
              <NavigationMenuList>
                {navItems.map((item) => (
                  <NavigationMenuItem key={item.title}>
                    {item.items ? (
                      <>
                        <NavigationMenuTrigger className="text-gray-700 hover:text-emerald-900">
                          {item.title}
                        </NavigationMenuTrigger>
                        <NavigationMenuContent>
                          <div className="grid gap-3 p-6 w-[400px] lg:w-[500px] lg:grid-cols-2">
                            {item.items.map((subItem) => (
                              <NavigationMenuLink
                                key={subItem.title}
                                href={subItem.href}
                                className="block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-emerald-50 hover:text-emerald-900 focus:bg-emerald-50 focus:text-emerald-900"
                              >
                                <div className="text-sm font-medium leading-none">{subItem.title}</div>
                                {subItem.items && (
                                  <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">
                                    {subItem.items.join(', ')}
                                  </p>
                                )}
                              </NavigationMenuLink>
                            ))}
                          </div>
                        </NavigationMenuContent>
                      </>
                    ) : (
                      <NavigationMenuLink href={item.href} className="text-gray-700 hover:text-emerald-900 px-3 py-2">
                        {item.title}
                      </NavigationMenuLink>
                    )}
                  </NavigationMenuItem>
                ))}
              </NavigationMenuList>
            </NavigationMenu>

            {/* Right side buttons */}
            <div className="hidden lg:flex items-center space-x-4">
              <Button variant="outline" className="text-emerald-900 border-emerald-900 hover:bg-emerald-50">
                GREENSHIELD HUB
              </Button>
              <Button 
                className="bg-emerald-900 hover:bg-emerald-800"
                onClick={() => setShowBooking(true)}
              >
                Book Appointment
              </Button>
              <div className="flex items-center space-x-2 text-emerald-900">
                <Phone className="h-5 w-5" />
                <span className="font-semibold">0344 335 0330</span>
              </div>
            </div>

            {/* Mobile menu button */}
            <Sheet open={isOpen} onOpenChange={setIsOpen}>
              <SheetTrigger asChild>
                <Button variant="ghost" size="icon" className="lg:hidden">
                  <Menu className="h-6 w-6" />
                </Button>
              </SheetTrigger>
              <SheetContent side="right" className="w-[300px] sm:w-[400px]">
                <div className="flex flex-col space-y-4 mt-6">
                  {navItems.map((item) => (
                    <div key={item.title}>
                      <h3 className="font-semibold text-emerald-900 mb-2">{item.title}</h3>
                      {item.items && (
                        <div className="ml-4 space-y-2">
                          {item.items.map((subItem) => (
                            <a
                              key={subItem.title}
                              href={subItem.href}
                              className="block text-gray-600 hover:text-emerald-900 py-1"
                            >
                              {subItem.title}
                            </a>
                          ))}
                        </div>
                      )}
                    </div>
                  ))}
                  <div className="pt-6 border-t">
                    <Button 
                      className="w-full bg-emerald-900 hover:bg-emerald-800 mb-3"
                      onClick={() => {
                        setIsOpen(false)
                        setShowBooking(true)
                      }}
                    >
                      Book Appointment
                    </Button>
                    <div className="flex items-center justify-center space-x-2 text-emerald-900">
                      <Phone className="h-5 w-5" />
                      <span className="font-semibold">0344 335 0330</span>
                    </div>
                  </div>
                </div>
              </SheetContent>
            </Sheet>
          </div>
        </div>
      </header>

      {/* Modals */}
      {showQuoteForm && (
        <QuoteRequestForm onClose={() => setShowQuoteForm(false)} />
      )}
      {showCalculator && (
        <PestCalculator onClose={() => setShowCalculator(false)} />
      )}
      {showPestTool && (
        <PestIdentificationTool onClose={() => setShowPestTool(false)} />
      )}
      {showBooking && (
        <BookingSystem onClose={() => setShowBooking(false)} />
      )}
    </>
  )
}


1. Then update the logo section in Header.tsx:

// Updated logo section with image
<div className="flex items-center">
  <Image
    src="/images/logo.png"
    alt="Greenshield Pest Management"
    width={180}
    height={50}
    className="h-auto w-auto"
    priority
  />
</div>

import Image from 'next/image'

<div className="flex items-center">
  <Image
    src="/images/logo.png"
    alt="Greenshield Pest Management"
    width={180}
    height={50}
    className="h-auto w-auto hidden sm:block"
    priority
  />
  <div className="sm:hidden text-2xl font-bold text-emerald-900">
    <span className="bg-emerald-900 text-white px-2 py-1 rounded">G</span>
    <span className="ml-2">GREENSHIELD</span>
  </div>
</div>



# Greenshield Pest Management Website

## ?? Setup
1. Clone repo: `git clone [repo-url]`
2. Install dependencies: `npm install`
3. Run dev server: `npm run dev`

## ?? Technologies
- Next.js
- Tailwind CSS
- TypeScript



const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "your-project.firebaseapp.com",
  projectId: "your-project",
  storageBucket: "your-project.appspot.com",
  messagingSenderId: "123456789",
  appId: "1:123456789:web:abc123def456"
};


npm install firebase @react-firebase/auth


import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";
import { getAuth } from "firebase/auth";

const firebaseConfig = {
  // Paste your Firebase config here
};

const app = initializeApp(firebaseConfig);
export const db = getFirestore(app);
export const auth = getAuth(app);


1. Automatic Customer Creation (From Bookings)
Modify your BookingSystem.tsx to save data to Firestore:

import { db } from "@/lib/firebase";
import { addDoc, collection } from "firebase/firestore";

const handleBooking = async () => {
  const bookingsRef = collection(db, "bookings");
  const customersRef = collection(db, "customers");

  // Save booking
  await addDoc(bookingsRef, {
    service: bookingData.service,
    date: bookingData.date,
    customerEmail: bookingData.email,
    status: "confirmed",
  });

  // Auto-create customer if new
  await addDoc(customersRef, {
    email: bookingData.email,
    name: bookingData.contactName,
    phone: bookingData.phone,
    firstInteraction: new Date(),
  });
};

2. Customer Interaction Tracking
Create src/components/CRM/InteractionLog.tsx:

import { addDoc, collection } from "firebase/firestore";

export const logInteraction = async (customerId: string, action: string) => {
  await addDoc(collection(db, "interactions"), {
    customerId,
    action, // e.g., "Booking", "Quote Request"
    timestamp: new Date(),
  });
};

// Usage in other components (e.g., QuoteRequestForm.tsx):
logInteraction(customerId, "Requested Quote");

3. Business Analytics Dashboard
Create src/app/dashboard/page.tsx (Protected route for admins):

import { query, collection, where, getDocs } from "firebase/firestore";

export default function Dashboard() {
  const [revenue, setRevenue] = useState(0);
  const [customers, setCustomers] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      // Total revenue
      const bookings = await getDocs(collection(db, "bookings"));
      const total = bookings.docs.reduce((sum, doc) => sum + doc.data().amount, 0);
      setRevenue(total);

      // Recent customers
      const customers = await getDocs(collection(db, "customers"));
      setCustomers(customers.docs.map(doc => doc.data()));
    };
    fetchData();
  }, []);

  return (
    <div>
      <h1>CRM Dashboard</h1>
      <div>Total Revenue: £{revenue}</div>
      <div>Customers: {customers.length}</div>
      {/* Add charts using Chart.js or ApexCharts */}
    </div>
  );
}

4. Admin Authentication
Create src/components/Auth/AdminAuth.tsx:

import { signInWithEmailAndPassword } from "firebase/auth";

const AdminLogin = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const handleLogin = async () => {
    try {
      await signInWithEmailAndPassword(auth, email, password);
      router.push("/dashboard");
    } catch (error) {
      alert("Invalid credentials");
    }
  };

  return (
    <div>
      <input type="email" onChange={(e) => setEmail(e.target.value)} />
      <input type="password" onChange={(e) => setPassword(e.target.value)} />
      <button onClick={handleLogin}>Login</button>
    </div>
  );
};


Firestore Security Rules
Go to Firebase Console > Firestore Rules and restrict access:

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /customers/{customerId} {
      allow read, write: if request.auth != null;
    }
  }
}

Protected Routes in Next.js
Add middleware (src/middleware.ts):

import { auth } from "@/lib/firebase";
import { NextResponse } from "next/server";

export async function middleware(request) {
  const user = await getCurrentUser(); // Implement this helper
  if (!user && request.nextUrl.pathname.startsWith("/dashboard")) {
    return NextResponse.redirect("/admin-login");
  }
  return NextResponse.next();
}


Update .env.local
Add your Firebase config:

NEXT_PUBLIC_FIREBASE_API_KEY=your_api_key
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your-domain.firebaseapp.com

vercel prod

git clone https://github.com/Irediaire051/greenshield-crm-template.git
cd greenshield-crm-template
npm install
npm run dev



1. src/app/dashboard/bookings/page.tsx
o Displays all bookings with filters (status, date range)
o Allows rescheduling/cancellations


import { getDocs, collection, query, where } from "firebase/firestore";

export default function BookingsPage() {
  const [bookings, setBookings] = useState([]);
  const [filter, setFilter] = useState("upcoming");

  useEffect(() => {
    const fetchBookings = async () => {
      let q = query(collection(db, "bookings"));
      
      if (filter === "upcoming") {
        q = query(q, where("date", ">=", new Date()));
      }
      
      const snapshot = await getDocs(q);
      setBookings(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));
    };
    fetchBookings();
  }, [filter]);

  return (
    <div>
      <h1>Booking Management</h1>
      <select onChange={(e) => setFilter(e.target.value)}>
        <option value="upcoming">Upcoming</option>
        <option value="past">Past</option>
        <option value="cancelled">Cancelled</option>
      </select>
      
      {bookings.map(booking => (
        <BookingCard 
          key={booking.id} 
          booking={booking} 
          onCancel={handleCancel}
        />
      ))}
    </div>
  );
}

npm install @stripe/stripe-js stripe

src/components/Payment/StripeCheckout.tsx:

import { loadStripe } from '@stripe/stripe-js';

const stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);

export function StripeCheckout({ amount }) {
  const handlePayment = async () => {
    const stripe = await stripePromise;
    const response = await fetch('/api/create-stripe-session', {
      method: 'POST',
      body: JSON.stringify({ amount })
    });
    const session = await response.json();
    await stripe.redirectToCheckout({ sessionId: session.id });
  };

  return <button onClick={handlePayment}>Pay £{amount}</button>;
}


src/app/api/create-stripe-session/route.ts:
import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!);

export async function POST(req: Request) {
  const { amount } = await req.json();
  const session = await stripe.checkout.sessions.create({
    payment_method_types: ['card'],
    line_items: [{
      price_data: {
        currency: 'gbp',
        product_data: { name: 'Pest Control Service' },
        unit_amount: amount * 100,
      },
      quantity: 1,
    }],
    mode: 'payment',
    success_url: `${req.headers.get('origin')}/payment/success`,
    cancel_url: `${req.headers.get('origin')}/payment/cancelled`,
  });

  return Response.json({ id: session.id });
}

Install PayPal SDK
npm install @paypal/react-paypal-js

src/components/Payment/PayPalButton.tsx:
import { PayPalScriptProvider, PayPalButtons } from "@paypal/react-paypal-js";

export function PayPalButton({ amount }) {
  return (
    <PayPalScriptProvider options={{ "client-id": process.env.NEXT_PUBLIC_PAYPAL_CLIENT_ID! }}>
      <PayPalButtons 
        createOrder={(_, actions) => {
          return actions.order.create({
            purchase_units: [{
              amount: { value: amount.toString() }
            }]
          });
        }}
        onApprove={async (_, actions) => {
          await actions.order?.capture();
          // Save to Firestore
          await addDoc(collection(db, "payments"), {
            method: "paypal",
            amount,
            status: "completed"
          });
        }}
      />
    </PayPalScriptProvider>
  );
}

Payment Tracking Dashboard
Added to CRM dashboard:

const PaymentAnalytics = () => {
  const [payments, setPayments] = useState([]);

  useEffect(() => {
    const fetchPayments = async () => {
      const snapshot = await getDocs(collection(db, "payments"));
      setPayments(snapshot.docs.map(doc => doc.data()));
    };
    fetchPayments();
  }, []);

  return (
    <div>
      <h2>Payment Tracking</h2>
      <div>Total Revenue: £
        {payments.reduce((sum, p) => sum + p.amount, 0)}
      </div>
      <Chart data={payments} />
    </div>
  );
};


Environment Variables
Create .env.local:

NEXT_PUBLIC_FIREBASE_API_KEY=your_key
NEXT_PUBLIC_STRIPE_KEY=pk_test_xxx
STRIPE_SECRET_KEY=sk_test_xxx
NEXT_PUBLIC_PAYPAL_CLIENT_ID=xxx

Security Rules
Update Firebase Rules:

match /payments/{paymentId} {
  allow read: if request.auth != null;
  allow create: if request.resource.data.amount > 0;
}

1. Invoice Generation (PDF Receipts)
Solution: Use @react-pdf/renderer

npm install @react-pdf/renderer


src/components/Invoices/InvoicePDF.tsx:
import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';

const styles = StyleSheet.create({
  page: { padding: 30 },
  header: { fontSize: 24, marginBottom: 20 },
  table: { display: "flex", width: "100%", marginBottom: 20 },
  row: { flexDirection: "row", borderBottom: "1px solid #eee" },
  cell: { padding: 5, flex: 1 }
});

export const InvoicePDF = ({ booking, customer }) => (
  <Document>
    <Page style={styles.page}>
      <Text style={styles.header}>Greenshield Pest Control</Text>
      
      <View style={styles.table}>
        <View style={styles.row}>
          <Text style={styles.cell}>Invoice #: {booking.id}</Text>
          <Text style={styles.cell}>Date: {new Date().toLocaleDateString()}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.cell}>Service: {booking.service}</Text>
          <Text style={styles.cell}>Amount: £{booking.amount}</Text>
        </View>
      </View>
      
      <Text>Customer: {customer.name}</Text>
    </Page>
  </Document>
);

src/utils/invoiceHandler.ts:
import { pdf } from '@react-pdf/renderer';
import { storage } from '@/lib/firebase';
import { ref, uploadBytes, getDownloadURL } from 'firebase/storage';

export const generateInvoice = async (booking, customer) => {
  // 1. Generate PDF
  const invoiceBlob = await pdf(<InvoicePDF booking={booking} customer={customer} />).toBlob();
  
  // 2. Save to Firebase Storage
  const invoiceRef = ref(storage, `invoices/${booking.id}.pdf`);
  await uploadBytes(invoiceRef, invoiceBlob);
  
  // 3. Get downloadable link
  const invoiceUrl = await getDownloadURL(invoiceRef);
  
  // 4. Update Firestore
  await updateDoc(doc(db, "bookings", booking.id), {
    invoiceUrl,
    invoiceSent: false // Will be marked true after SMS/email
  });
  
  return invoiceUrl;
};


Install SDK:
npm install twilio

src/app/api/send-sms/route.ts:
import Twilio from 'twilio';

const twilio = Twilio(process.env.TWILIO_SID, process.env.TWILIO_AUTH_TOKEN);

export async function POST(req: Request) {
  const { to, body } = await req.json();
  
  await twilio.messages.create({
    body,
    from: process.env.TWILIO_PHONE_NUMBER,
    to
  });
  
  return Response.json({ success: true });
}

src/utils/notifications.ts:
export const sendSMS = async (phoneNumber: string, message: string) => {
  await fetch('/api/send-sms', {
    method: 'POST',
    body: JSON.stringify({
      to: phoneNumber,
      body: message
    })
  });
};

// Example usage after booking:
await sendSMS(
  customer.phone, 
  `Your Greenshield booking is confirmed! View invoice: ${invoiceUrl}`
);


 customers collection:
{
  points: 100,
  tier: "silver", // silver/gold/platinum
  lastPurchase: "2023-11-20"
}

src/components/Loyalty/LoyaltyProgram.tsx:
import { updateDoc, doc } from 'firebase/firestore';

export function LoyaltyProgram({ customerId }) {
  const addPoints = async (points: number) => {
    await updateDoc(doc(db, "customers", customerId), {
      points: increment(points),
      lastPurchase: new Date()
    });
  };

  // Example: Add 10 points per £100 spent
  await addPoints(Math.floor(booking.amount / 100) * 10);
}

 Tier Benefits Logic
const updateTier = async (customerId: string) => {
  const customer = await getDoc(doc(db, "customers", customerId));
  const points = customer.data()?.points || 0;
  
  let tier = "silver";
  if (points > 500) tier = "gold";
  if (points > 1500) tier = "platinum";
  
  await updateDoc(doc(db, "customers", customerId), { tier });
};

Full System Integration
// 1. Create booking
const bookingRef = await addDoc(collection(db, "bookings"), bookingData);

// 2. Generate invoice
const invoiceUrl = await generateInvoice(bookingData, customer);

// 3. Send SMS
await sendSMS(
  customer.phone,
  `Thank you for your booking! Invoice: ${invoiceUrl}`
);

// 4. Update loyalty points
await addPoints(customer.id, bookingData.amount);

Environment Variables
.env.local:
# Twilio
TWILIO_SID=your_account_sid
TWILIO_AUTH_TOKEN=your_auth_token
TWILIO_PHONE_NUMBER=+123456789

# Firebase
NEXT_PUBLIC_FIREBASE_API_KEY=your_key

# Stripe
NEXT_PUBLIC_STRIPE_KEY=pk_test_xxx
STRIPE_SECRET_KEY=sk_test_xxx

Security Rules:
match /customers/{customerId} {
  allow read: if request.auth != null;
  allow update: if request.auth.token.isAdmin;
}

 Firestore Schema Updates
Add these fields to your customers collection:

{
  referralCode: "GREEN-5A2B9C", // Unique code
  referredBy: "GREEN-8D3E7F", // Parent referral code
  referralCount: 2,
  pendingRewards: 0
}

src/utils/referrals.ts:
export const generateReferralCode = (userId: string) => {
  const base = "GREEN-";
  const random = Math.random().toString(36).substring(2, 8).toUpperCase();
  return `${base}${random}`;
};

// On new customer signup:
await updateDoc(doc(db, "customers", customerId), {
  referralCode: generateReferralCode(customerId)
});

src/components/Loyalty/ReferralProgram.tsx:
import { copyToClipboard } from "@/utils/helpers";

export function ReferralProgram({ customer }) {
  const referralLink = `https://greenshield.com/signup?ref=${customer.referralCode}`;
  
  return (
    <div className="bg-emerald-50 p-6 rounded-lg">
      <h3 className="font-bold text-emerald-900 mb-2">Earn £20 for Each Friend!</h3>
      <div className="flex gap-2 mb-4">
        <input 
          value={referralLink} 
          readOnly 
          className="flex-1 p-2 border rounded"
        />
        <button 
          onClick={() => copyToClipboard(referralLink)}
          className="bg-emerald-900 text-white px-4 rounded"
        >
          Copy
        </button>
      </div>
      <p className="text-sm">
        You've earned <strong>£{customer.referralCount * 20}</strong> from {customer.referralCount} referrals.
      </p>
    </div>
  );
}

src/utils/referrals.ts:
export const processReferral = async (newCustomerId: string, referralCode: string) => {
  // 1. Find referring customer
  const q = query(collection(db, "customers"), where("referralCode", "==", referralCode));
  const snapshot = await getDocs(q);
  
  if (!snapshot.empty) {
    const referrer = snapshot.docs[0];
    
    // 2. Update both accounts
    await updateDoc(doc(db, "customers", referrer.id), {
      referralCount: increment(1),
      pendingRewards: increment(20) // £20 credit
    });
    
    await updateDoc(doc(db, "customers", newCustomerId), {
      referredBy: referralCode,
      points: 100 // Signup bonus
    });
  }
};

Create WhatsApp API Route
src/app/api/send-whatsapp/route.ts:
import Twilio from 'twilio';
const twilio = Twilio(process.env.TWILIO_SID, process.env.TWILIO_AUTH_TOKEN);

export async function POST(req: Request) {
  const { to, body } = await req.json();
  
  await twilio.messages.create({
    body,
    from: `whatsapp:${process.env.TWILIO_WHATSAPP_NUMBER}`,
    to: `whatsapp:${to}`
  });
  
  return Response.json({ success: true });
}

Notification Service Update
src/utils/notifications.ts:
export const sendWhatsApp = async (phone: string, message: string) => {
  await fetch('/api/send-whatsapp', {
    method: 'POST',
    body: JSON.stringify({
      to: phone.replace(/^0/, "+44"), // UK format
      body: message
    })
  });
};

// Example booking confirmation:
await Promise.all([
  sendSMS(customer.phone, `Booking confirmed! View: ${invoiceUrl}`),
  sendWhatsApp(customer.phone, `?? Your Greenshield booking is confirmed!\n\n` +
    `?? *Invoice*: ${invoiceUrl}\n` +
    `?? *Referral Code*: ${customer.referralCode}`)
]);

A. React-to-Print Component
src/components/Loyalty/LoyaltyCard.tsx:
import { useReactToPrint } from 'react-to-print';

export function LoyaltyCard({ customer }) {
  const cardRef = useRef<HTMLDivElement>(null);
  
  const handlePrint = useReactToPrint({
    content: () => cardRef.current,
    pageStyle: `
      @page { size: 85mm 54mm; margin: 0; }
      @media print { body { -webkit-print-color-adjust: exact; } }
    `
  });

  return (
    <div>
      <div ref={cardRef} className="w-[85mm] h-[54mm] bg-gradient-to-br from-emerald-900 to-emerald-700 p-4 text-white relative">
        <div className="absolute top-4 right-4 bg-white text-emerald-900 px-2 rounded-full font-bold">
          {customer.tier}
        </div>
        <h2 className="text-2xl font-bold mb-2">Greenshield Rewards</h2>
        <p className="text-sm mb-1">Member: {customer.name}</p>
        <p className="text-sm mb-4">Points: {customer.points}</p>
        <div className="grid grid-cols-3 gap-2 text-xs">
          <div className="bg-white/20 p-2 rounded text-center">
            <div>5% Off</div>
          </div>
          <div className="bg-white/20 p-2 rounded text-center">
            <div>Priority Booking</div>
          </div>
          <div className="bg-white/20 p-2 rounded text-center">
            <div>Free Inspection</div>
          </div>
        </div>
        <div className="absolute bottom-4 left-4 text-xs">
          {customer.referralCode}
        </div>
      </div>
      
      <button 
        onClick={handlePrint}
        className="mt-4 bg-emerald-900 text-white px-4 py-2 rounded"
      >
        Print Loyalty Card
      </button>
    </div>
  );
}

Add to globals.css:
@media print {
  body * {
    visibility: hidden;
  }
  .printable-card, .printable-card * {
    visibility: visible;
  }
  .printable-card {
    position: absolute;
    left: 0;
    top: 0;
    width: 85mm;
    height: 54mm;
  }
}

Workflow Example (Referral ? WhatsApp ? Loyalty)

// 1. New customer signs up with referral code
await processReferral(newCustomerId, "GREEN-5A2B9C");

// 2. Send WhatsApp confirmation
await sendWhatsApp(
  newCustomer.phone,
  `Welcome to Greenshield! Use code ${newCustomer.referralCode} for rewards.`
);

// 3. Update referrer
await updateDoc(doc(db, "customers", referrerId), {
  pendingRewards: increment(20)
});

// 4. Notify referrer via WhatsApp
await sendWhatsApp(
  referrer.phone,
  `?? You earned £20! ${newCustomer.name} joined using your code.`
);

.env.local:
# Twilio WhatsApp
TWILIO_WHATSAPP_NUMBER=+14155238886 # Sandbox number
TWILIO_SANDBOX_CODE=join-mustard  # Your sandbox code

// Prevent self-referrals
if (newCustomer.phone === referrer.phone) return;

sequenceDiagram
    participant Customer
    participant System
    participant Referrer
    
    Customer->>System: Signs up with referral code
    System->>Referrer: Adds £20 credit (WhatsApp)
    System->>Customer: Issues loyalty card (PDF)
    System->>Customer: Welcome WhatsApp
    Customer->>System: Earns points on bookings
    System->>Customer: SMS/WhatsApp updates


